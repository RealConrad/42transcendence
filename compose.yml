networks:
  transcendence:
    name: transcendence
    driver: bridge


services:
#  auth_db:
#    image: postgres:13
#    container_name: auth_db
#    env_file:
#      - .env.auth
#    ports:
#      - "5432:5432"
#    volumes:
#      - auth_postgres_data:/var/lib/postgresql/data
#    networks:
#      - transcendence
#
#  auth-service:
#    build: ./backend/auth_service
#    container_name: auth-service
#    image: auth-service
#    ports:
#      - "8000:8000"
#    env_file:
#      - .env.auth
#    depends_on:
#      - auth_db
#    networks:
#      - transcendence

  game_db:
    image: postgres:13
    container_name: game_db
    env_file:
      - .env.game
    ports:
      - "5433:5432"
    volumes:
      - game_postgres_data:/var/lib/postgresql/data
    networks:
      - transcendence
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d transcendence"]
      interval: 5s
      timeout: 5s
      retries: 5

  game-service:
    build: ./backend/game_service
    container_name: game-service
    image: game-service
    ports:
      - "8002:8002"
    env_file:
      - .env.game
    depends_on:
      game_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - transcendence

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"  # Optional I think
    volumes:
      - game_postgres_data:/var/lib/postgresql/data
    networks:
      - transcendence
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5


#  nginx:
#    image: nginx:latest
#    container_name: nginx
#    ports:
#      - "443:443"
#      - "80:80"
#    env_file:
#      - .env
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#      - ./nginx/ssl:/etc/nginx/ssl/:ro
#      - ./frontend:/var/www/transcendence:ro
#    networks:
#      - transcendence

volumes:
  auth_postgres_data:
  game_postgres_data:
