/* Main CSS configurations */
@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');

:root {
  --top-bottom-height: 10vh;
  --game-height: calc(100vh - var(--top-bottom-height)*2);
  --game-width: calc(var(--game-height) * 16 / 9);
  --font-size: 3vh; 
  --background-color: black;
  --highlight-color: rgb(255, 255, 255);
  --color: rgb(172, 172, 172);
  --lowlight-color: rgb(100, 100, 100, 0.7);
}

html, body {
  cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewport="0 0 10 10" fill="%23ffffff"><rect width="10" height="10" /></svg>'), auto;
  height: 100%;
  margin: 0;
  padding: 0;
  background-color: var(--background-color);
  font-family: 'Press Start 2P';
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

header {
  font-size: calc(5vh);
  color: var(--highlight-color);
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  width: 100%;
}

footer {
  height: var(--top-bottom-height);
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--color);
  font-size: 2.5rem;
}

main-menu {
  width: var(--game-width);
  height: var(--game-height);
  position: relative;
  display: flex;
  justify-content: space-between;
  background-color: #fff;
}

#gameCanvas {
  width: 100%;
  height: 100%;
  background-color: #000;
}

left-menu, right-menu {

  height: var(--game-height);
  position: absolute;
  top: 0;
}

left-menu {
  display: grid;
  width: 50%;
  grid-template-rows: repeat(9, 1fr);
  padding-left: 1rem;
}

right-menu {
  width: 50%; /* Make it a percentage of the menu area */
  right: 0;
  text-align: right;
  /* align-items: end; */
  /* display: grid; */
  /* grid-template-rows: repeat(9, 1fr); */
  padding-right: 1rem;
}

.menu-option button {
  all: unset;
  display: block;
  width: 100%;
  font-size: var(--font-size); /* Adjust font size dynamically based on viewport width */
  text-align: left; /* Align text to the left for left-menu */
  background-color: transparent; /* Ensure the background is transparent */
  /* cursor: pointer; Add cursor pointer for better UX */
}

.menu-option .button-description {
  display: block;
  font-size: calc(var(--font-size) * 0.4);  /* Smaller font size */
  color: var(--lowlight-color);  /* Adjust color based on your design, here it's 50% opacity black */
  font-family: Inter;   /* Different font, customize as needed */
}

.menu-option {
  display: block;
  text-decoration: none;
  font-size: var(--font-size); /* Adjust font size dynamically based on viewport width */
  color: var(--color);
  border-radius: 5px;
  margin: 0.5rem 0;
}

#right-menu-container {
  width: 100%;
  height: 100%;
  overflow: hidden; 
  text-align: right;
  display: grid;
  grid-template-rows: repeat(9, 1fr);
  /* padding-right: 2rem;  */
}

right-menu .menu-option button {
  text-align: right; /* Align text to the right for right-menu */
}

@keyframes flickerGlow {
  0%, 100% {
    text-shadow: 0 0 8px rgba(255, 255, 255, 0.5);
  }
  50% {
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.7);
  }
}


.menu-option:hover button {
  color: #fff; /* Sets text color to white on hover */
  animation: flickerGlow 1s infinite;
}

.menu-option button.glowing-effect {
  color: #fff; /* Sets text color to white */
  text-shadow: 0 0 8px rgba(255, 255, 255, 0.5); /* Initial state of glow */
  animation: flickerGlow 1s infinite; /* Apply the flicker animation */
}

.paddle {
  position: absolute;
  width: 10px;
  background-color: white;
}


/* Shaking effect */
@keyframes shake {
  0%, 100% { transform: translate(-4px, -4px); }
  10%, 50%, 90% { transform: translate(-8px, -4px); }
  20%, 60% { transform: translate(0px, -4px); }
  30%, 70%, 90% { transform: translate(-4px, -8px); }
  20%, 40%, 80% { transform: translate(-4px, 0px); }
}

@keyframes after-shake {
  90%, 10% { transform: translate(-4px, -4px); }
  0%, 40%, 100% { transform: translate(-8px, -4px); }
  10%, 50% { transform: translate(0px, -4px); }
  20%, 60%, 80% { transform: translate(-4px, -8px); }
  10%, 30%, 70% { transform: translate(-4px, 0px); }
}

.after-image-shake {
  animation: shake 0.6s infinite;
}
.after-image-after-shake {
  animation: after-shake 0.4s infinite;
}

.cursor-after-image {
  position: absolute;
  width: 12px; 
  height: 12px; 
  background-color: rgba(255, 255, 255, 0.2);
  pointer-events: none;
}

.cursor-after-image.enlarged {
  width: 18px;
  height: 18px;
}

.cursor-after-image.yellow {
  background-color: rgba(255, 230, 0, 0.445);
}

.cursor-after-image.red {
  background-color: rgba(255, 38, 0, 0.404);
}

.cursor-after-image.blue {
  background-color: rgba(0, 81, 255, 0.445);
}

.cursor-after-image.green {
  background-color: rgba(30, 255, 0, 0.274);
}

.cursor-after-image.purple {
  background-color: rgba(99, 1, 112, 0.277);
}

.cursor-after-image.pink {
  background-color: rgba(255, 0, 221, 0.277);
}



/* Leaderboard setup */

.leaderboard-entry {
  display: flex;
  justify-content: space-between; /* Ensures items are justified with space between them */
}


.leaderboard-entry .score {
  padding-left : 1rem;
  font-size: 2em;
  font-weight: bold;
  text-align: center;
  color: gold;
}


/* howTo */

.how-to-container {
  display: grid;
  grid-template-rows: 2fr 4fr 4fr; /* Allocate space: 20% for description, 40% each for powers and controls */
  grid-template-columns: 1fr; /* One column layout */
  color: #fff; /* Ensure text is white */
  padding: 10px; /* Padding around the content */
  grid-row: 1 / -1;
  grid-column: 1 / -1;
  background-color: aquamarine; /* Just for visual clarity */
  height: 100%; /* Ensure it fills the parent container */
}

.description-container {
  text-align: center;
  grid-row: 1; /* Place in the first row */
  grid-column: 1; /* Only one column to consider */
}

#power-title, #description {
  margin: 5px 0;
  color: #ccc;
}

.atk-def-container {
  display: flex;
  justify-content: space-around; /* Space between ATK and DEF */
  grid-row: 2; /* Place in the second row */
  grid-column: 1;
  background-color: aqua; /* Just for visual clarity */
}

.atk-powers, .def-powers {
  display: flex;
  flex-direction: column;
  align-items: center;
  flex-grow: 1;
  justify-content: space-around;
}

.controls {
  display: flex;
  flex-direction: column;
  align-items: center;
  grid-row: 3; /* Place in the third row */
  grid-column: 1;
}


.control-keys {
  display: flex;
  justify-content: space-around;
}

.control-keys button {
  padding: 10px;
  margin: 5px;
}



/* power */

.power {
  width: 30px;
  z-index: 10;
  height: 30px;
  background-color: rgba(255, 255, 255, 0.4);
  color: black;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  font-size: 14px; /* Adjust size as needed for a single character */
  
}

.after-image, .after-shake, .after-after-shake {
  z-index: 5;
  width: 38px;
  height: 38px;
  position: absolute;
  background-color: rgba(255, 255, 255, 0.2);
  animation: shake 1.5s infinite;
  animation-delay: var(--animation-delay-delay);
}

.after-shake {
  height: 40px;
  animation-delay: calc(var(--animation-delay-delay) + 0.5s);
}

.after-after-shake {
  width: 40px;
  animation-delay: calc(var(--animation-delay-delay) + 1.0s);
}

.power-text{
  z-index: 20;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  /* padding-top: 3px; */
  font-size: 18px;
  font-weight: bold;
  color: black;
}

/* Keyframes for shaking effects */
@keyframes shake {
  0%, 100% { transform: translate(-2px, 2px); }
  10%, 90% { transform: translate(2px, -2px); }
  20%, 80% { transform: translate(2px, 2px); }
  30%, 70% { transform: translate(-2px, -2px); }
  40%, 60% { transform: translate(2px, -2px); }
  50% { transform: translate(-2px, 2px); }
}

.power:hover .after-image {
  background-color: rgba(0, 255, 0, 0.3); /* Change to green on hover */
}

.power:hover .after-shake {
  background-color: rgba(255, 0, 0, 0.3); /* Change to orange on hover */
}

.power:hover .after-after-shake {
  background-color: rgba(0, 0, 255, 0.3); /* Keep blue on hover */
}



/* Media queries */

@media (max-height: 720px) {
  :root {
    --top-bottom-height: 0vh;
    --game-height: 720px;
    --game-width: 1280px;
    --font-size: 32px;
  }

  header, footer {
    display: none; /* Hide header and footer */
  }

}