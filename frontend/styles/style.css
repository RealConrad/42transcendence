/* Main CSS configurations */
@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');



:root {
  --top-bottom-height: 10vh;
  --game-height: calc(100vh - var(--top-bottom-height)*2);
  --game-width: calc(var(--game-height) * 16 / 9);
  --paddle-width: calc(var(--game-width) / 128);
  --paddle-height: calc(var(--game-height) / 10);
  --font-size: 3vh; 
  --background-color: black;
  --highlight-color: rgb(255, 255, 255);
  --color: rgb(172, 172, 172);
  --lowlight-color: rgb(100, 100, 100, 0.7);
  --animation-delay-delay: 0.5;
}

html, body {
  cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="%23ffffff"><rect width="15" height="15" /></svg>'), auto;
  height: 100%;
  margin: 0;
  padding: 0;
  background-color: var(--background-color);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  font-family: 'Press Start 2P', 'sans-serif';
}

header {
  font-size: calc(5vh);
  color: var(--highlight-color);
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  width: 100%;
}

footer {
  height: var(--top-bottom-height);
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--color);
  font-size: 2.5rem;
}

main-menu {
  width: var(--game-width);
  height: var(--game-height);
  position: relative;
  display: flex;
  justify-content: space-between;
  background-color: #fff;
}

#gameCanvas {
  width: 100%;
  height: 100%;
  background-color: #000;
}

left-menu, right-menu {
  height: var(--game-height);
  position: absolute;
  top: 0;
}

left-menu {
  display: grid;
  width: 50%;
  grid-template-rows: repeat(9, 1fr);
  padding-left: 1rem;
}

right-menu {
  width: 50%;
  right: 0;
  text-align: right;
  padding-right: 1rem;
}

.menu-option button {
  all: unset;
  display: block;
  width: 100%;
  font-size: var(--font-size);
  text-align: left;
  background-color: transparent;
}

.menu-option .button-description {
  display: block;
  font-size: calc(var(--font-size) * 0.4);
  color: var(--lowlight-color);
  font-family: Inter;
}

.menu-option {
  display: block;
  text-decoration: none;
  font-size: var(--font-size);
  color: var(--color);
  margin: 0.5rem 0;
}

#right-menu-container {
  width: 100%;
  height: 100%;
  overflow: hidden; 
  text-align: right;
  display: grid;
  grid-template-rows: repeat(9, 1fr);
}

right-menu .menu-option button {
  text-align: right;
}

@keyframes flickerGlow {
  0%, 100% {
    text-shadow: 0 0 calc(var(--paddle-width) * 0.8) rgba(255, 255, 255, 0.5);
  }
  50% {
    text-shadow: 0 0 calc(var(--paddle-width) * 1.0) rgba(255, 255, 255, 0.7);
  }
}


.menu-option:hover button {
  color: #fff; /* Sets text color to white on hover */
  animation: flickerGlow 1s infinite;
}

.menu-option button.glowing-effect {
  color: #fff; /* Sets text color to white */
  text-shadow: 0 0 calc(var(--paddle-width) * 0.8) rgba(255, 255, 255, 0.5); /* Initial state of glow */
  animation: flickerGlow 1s infinite; /* Apply the flicker animation */
}

.paddle {
  position: absolute;
  width: var(--paddle-width);
  background-color: white;
}

.play-button {
  text-align: right;
}

/* Shaking effect */
@keyframes shake {
  0%, 100% { transform: translate(calc(var(--paddle-width) * -0.4), calc(var(--paddle-width) * -0.4)); }
  10%, 50%, 90% { transform: translate(calc(var(--paddle-width) * -0.8), calc(var(--paddle-width) * -0.4)); }
  20%, 60% { transform: translate(0px, calc(var(--paddle-width) * -0.4)); }
  30%, 70%, 90% { transform: translate(calc(var(--paddle-width) * -0.4), calc(var(--paddle-width) * -0.8)); }
  20%, 40%, 80% { transform: translate(calc(var(--paddle-width) * -0.4), 0px); }
}

@keyframes after-shake {
  90%, 10% { transform: translate(calc(var(--paddle-width) * -0.4), calc(var(--paddle-width) * -0.4)); }
  0%, 40%, 100% { transform: translate(calc(var(--paddle-width) * -0.8), calc(var(--paddle-width) * -0.4)); }
  10%, 50% { transform: translate(0px, calc(var(--paddle-width) * -0.4)); }
  20%, 60%, 80% { transform: translate(calc(var(--paddle-width) * -0.4), calc(var(--paddle-width) * -0.8)); }
  10%, 30%, 70% { transform: translate(calc(var(--paddle-width) * -0.4), 0px); }
}

.after-image-shake {
  animation: shake 0.6s infinite;
}
.after-image-after-shake {
  animation: after-shake 0.4s infinite;
}

.cursor-after-image {
  position: absolute;
  width: calc(var(--paddle-width) * 1.2); 
  height: calc(var(--paddle-width) * 1.2); 
  background-color: rgba(255, 255, 255, 0.2);
  pointer-events: none;
}

.cursor-after-image.enlarged {
  width: calc(var(--paddle-width) * 1.8);
  height: calc(var(--paddle-width) * 1.8);
}

.cursor-after-image.yellow {
  background-color: rgba(255, 230, 0, 0.445);
}

.cursor-after-image.red {
  background-color: rgba(255, 38, 0, 0.404);
}

.cursor-after-image.blue {
  background-color: rgba(0, 81, 255, 0.445);
}

.cursor-after-image.green {
  background-color: rgba(30, 255, 0, 0.274);
}

.cursor-after-image.purple {
  background-color: rgba(99, 1, 112, 0.277);
}

.cursor-after-image.pink {
  background-color: rgba(255, 0, 221, 0.277);
}

/* Media queries */

@media (max-height: 720px) {
  :root {
    --top-bottom-height: 0vh;
    --game-height: 720px;
    --game-width: 1280px;
    --font-size: 32px;
  }

  header, footer {
    display: none; /* Hide header and footer */
  }
}